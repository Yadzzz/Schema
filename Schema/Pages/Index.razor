@page "/"

@*@attribute [Authorize(Roles = "Administrator,User")]*@
@inject IJSRuntime JS
@inject Services.PageNavigationService PageNavService

<PageTitle>Hem</PageTitle>

@*<AuthorizeView>
    <Authorized>
*@

<div class="row layout-top-spacing">

    <div class="col-12">
        <div class="alert alert-arrow-right alert-icon-right alert-light-warning alert-dismissible fade show mb-4" role="alert">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-alert-circle"><circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="12"></line><line x1="12" y1="16" x2="12" y2="16"></line></svg>
            @*<strong>Hello, @context.User.Identity.Name!</strong>*@

            <div class="col-10" style="display: flex; justify-content: center; align-items: center;">
            <strong>Väskust Bevakning Schema App</strong>
            </div>

            <div class="col-10" style="display: flex; justify-content: center; align-items: center;">
            <p>Navigare i menyn för att komma åt respektive sida.</p>
            </div>

            <br />

            <div class="col-10" style="display: flex; justify-content: center; align-items: center;">
            <img src="/vkblogo.png" alt="My Image" width="90" height="100">
            </div>

            <br />

        </div>
    </div>

    <div class="col-md-12">
    </div>

</div>

<!-- CONTENT AREA -->
@*    </Authorized>
</AuthorizeView>*@

@code {
    [CascadingParameter]
    private Task<AuthenticationState> _authenticationState { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            this.PageNavService.UpdateActivePage("Index");

            //var authState = await this._authenticationState;

            await JS.InvokeVoidAsync("OnScrollEvent");
            this.StateHasChanged();
        }
    }
}